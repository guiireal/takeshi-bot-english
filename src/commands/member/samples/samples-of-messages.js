const { PREFIX } = require(`${BASE_DIR}/config`);
const { delay } = require("baileys");

module.exports = {
  name: "samples-of-messages",
  description: "List all available message sending examples for developers",
  commands: ["samples-of-messages", "sample-of-messages"],
  usage: `${PREFIX}samples-of-messages`,
  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ sendReply, sendReact }) => {
    await sendReact("üìö");

    await delay(2000);

    await sendReply(
      "*üìö AVAILABLE EXAMPLES*\n\n" +
        "Use the commands below to see practical examples of how to use my commands:"
    );

    await delay(2000);

    await sendReply(
      "*üîä AUDIO:*\n" +
        `‚Ä¢ \`${PREFIX}send-audio-from-file\` - Send audio from local file\n` +
        `‚Ä¢ \`${PREFIX}send-audio-from-url\` - Send audio from URL\n` +
        `‚Ä¢ \`${PREFIX}send-audio-from-buffer\` - Send audio from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üñºÔ∏è IMAGE:*\n" +
        `‚Ä¢ \`${PREFIX}send-image-from-file\` - Send image from local file\n` +
        `‚Ä¢ \`${PREFIX}send-image-from-url\` - Send image from URL\n` +
        `‚Ä¢ \`${PREFIX}send-image-from-buffer\` - Send image from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üé¨ VIDEO:*\n" +
        `‚Ä¢ \`${PREFIX}send-video-from-file\` - Send video from local file\n` +
        `‚Ä¢ \`${PREFIX}send-video-from-url\` - Send video from URL\n` +
        `‚Ä¢ \`${PREFIX}send-video-from-buffer\` - Send video from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üéûÔ∏è GIF:*\n" +
        `‚Ä¢ \`${PREFIX}send-gif-from-file\` - Send GIF from local file\n` +
        `‚Ä¢ \`${PREFIX}send-gif-from-url\` - Send GIF from URL\n` +
        `‚Ä¢ \`${PREFIX}send-gif-from-buffer\` - Send GIF from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üè∑Ô∏è STICKER:*\n" +
        `‚Ä¢ \`${PREFIX}send-sticker-from-file\` - Send sticker from local file\n` +
        `‚Ä¢ \`${PREFIX}send-sticker-from-url\` - Send sticker from URL\n` +
        `‚Ä¢ \`${PREFIX}send-sticker-from-buffer\` - Send sticker from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üìä POLL:*\n" +
        `‚Ä¢ \`${PREFIX}send-poll\` - Send polls/votes (single or multiple selection)`
    );

    await delay(2000);

    await sendReply(
      "*üìÑ DOCUMENT:*\n" +
        `‚Ä¢ \`${PREFIX}send-document-from-file\` - Send document from local file\n` +
        `‚Ä¢ \`${PREFIX}send-document-from-url\` - Send document from URL\n` +
        `‚Ä¢ \`${PREFIX}send-document-from-buffer\` - Send document from buffer`
    );

    await delay(2000);

    await sendReply(
      "*üí¨ TEXT AND REPLIES:*\n" +
        `‚Ä¢ \`${PREFIX}send-text\` - Send text (with/without mention)\n` +
        `‚Ä¢ \`${PREFIX}send-quoted\` - Reply to messages (with/without mention)\n` +
        `‚Ä¢ \`${PREFIX}send-reaction\` - Send reactions (emojis)`
    );

    await delay(2000);

    await sendReply(
      "*üìä DATA AND METADATA:*\n" +
        `‚Ä¢ \`${PREFIX}get-group-data\` - Get group data (name, owner, participants)\n` +
        `‚Ä¢ \`${PREFIX}get-message-data\` - Get message metadata\n` +
        `‚Ä¢ \`${PREFIX}group-functions\` - Group utility functions (demonstration)\n` +
        `‚Ä¢ \`${PREFIX}raw-message\` - Get raw message data`
    );

    await delay(2000);

    await sendReply(
      "*üéØ HOW TO USE:*\n\n" +
        "1Ô∏è‚É£ Execute any command from the list above\n" +
        "2Ô∏è‚É£ Observe the practical behavior\n" +
        "3Ô∏è‚É£ Check the source code in `/src/commands/member/examples/`\n" +
        "4Ô∏è‚É£ Use it as a base for your own commands\n\n" +
        "*üí° Tip:* All examples include detailed explanations and use cases!"
    );

    await delay(2000);

    await sendReply(
      "*üìù AVAILABLE FUNCTIONS:*\n\n" +
        "Check the `@types/index.d.ts` file for complete documentation of all available functions with code examples!"
    );
  },
};
